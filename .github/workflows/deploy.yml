name: Deploy FastAPI to Windows

# When to run this workflow
on:
  push:
    branches:
      - main  # Change to your default branch if different (e.g., master)
  workflow_dispatch:  # Allows manual triggering from GitHub UI

jobs:
  deploy:
    runs-on: self-hosted  # Use your Windows runner
    
    steps:
      # Step 1: Get the latest code
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Change to your Python version
      
      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: powershell
      
      # Step 4: Stop existing FastAPI service (if running)
      - name: Stop existing service
        run: |
          # Find and kill any existing uvicorn processes
          Get-Process | Where-Object {$_.ProcessName -like "*python*" -and $_.CommandLine -like "*uvicorn*"} | Stop-Process -Force
        shell: powershell
        continue-on-error: true  # Don't fail if no process exists
      
      # Step 5: Start FastAPI application
      - name: Start FastAPI
        run: |
          # Start in background
          Start-Process powershell -ArgumentList "-Command", "cd '${{ github.workspace }}'; python -m uvicorn main:app --host 0.0.0.0 --port 8000" -WindowStyle Hidden
        shell: powershell
      
      # Step 6: Verify deployment
      - name: Wait and verify
        run: |
          Start-Sleep -Seconds 5
          Invoke-WebRequest -Uri http://localhost:8000/docs -UseBasicParsing
        shell: powershell
